{"version":3,"sources":["components/card.jsx","components/carasole.jsx","components/add_new.jsx","components/home.jsx","components/input.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","id","this","quote","title","author","React","Component","Carousel","Fragment","style","height","data-ride","quotes","map","i","index","key","href","role","data-slide","aria-hidden","AddNew","to","Home","Create","handleSubmit","bind","e","preventDefault","console","log","x","document","getElementById","value","y","history","push","onSubmit","name","rows","placeholder","required","type","App","state","length","setState","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wXA4CeA,G,8BAvCf,WAAYC,GACX,qEACSA,I,sEAMN,OAEQ,yBAAKC,UAAU,8BAA8BC,GAAG,aAChD,yBAAKD,UAAU,eAAf,SAGA,yBAAKA,UAAU,aAEf,gCAAYA,UAAU,cACd,2BACA,0BAAMA,UAAU,2BACfE,KAAKH,MAAMI,MAAMA,MAClB,0BAAMH,UAAU,6BAGhB,4BACAA,UAAU,qBADV,oBAGI,0BAAMI,MAAM,gBACXF,KAAKH,MAAMI,MAAME,gB,GA5BvBC,IAAMC,YCsEVC,E,YAtEX,WAAYT,GACX,qEACSA,I,sEAYN,OACQ,kBAAC,IAAMU,SAAP,KACI,yBAAKR,GAAG,0BACRD,UAAU,iBACVU,MAAO,CAACC,OAAS,QACjBC,YAAU,YAEF,yBAAKZ,UAAU,iBACfU,MAAO,CAACC,OAAS,SAGTT,KAAKH,MAAMc,OAAOC,KAAK,SAACC,EAAEC,GAClB,OAAa,IAAVA,EAGK,yBACAhB,UAAU,uBACViB,IAAKD,EAAM,GACX,kBAAC,EAAD,CAAMb,MAAOY,KAOb,yBACAf,UAAU,gBACViB,IAAKD,EAAM,GACX,kBAAC,EAAD,CAAMb,MAAOY,SAYrC,uBAAGf,UAAU,wBAAwBkB,KAAK,2BAA2BC,KAAK,SAASC,aAAW,QAC1F,0BAAMpB,UAAU,6BAA6BqB,cAAY,SACzD,0BAAMrB,UAAU,WAAhB,aAGJ,uBAAGA,UAAU,wBAAwBkB,KAAK,2BAA2BC,KAAK,SAASC,aAAW,QAC1F,0BAAMpB,UAAU,6BAA6BqB,cAAY,SACzD,0BAAMrB,UAAU,WAAhB,e,GA9DTM,IAAMC,W,gBCede,E,iLAVP,OACK,kBAAC,IAAD,CAAMC,GAAG,WACV,yBAAKvB,UAAU,oBACX,0BAAMA,UAAU,sB,GANXM,IAAMC,WCcZiB,G,uLAVP,OACI,yBAAKxB,UAAU,YACf,kBAAC,EAAD,CAAUa,OAASX,KAAKH,MAAMc,SAC9B,kBAAC,EAAD,W,GANOP,IAAMC,YC+DVkB,G,kBA/DX,WAAY1B,GACX,IAAD,8BACI,4CAAMA,KACD2B,aAAe,EAAKA,aAAaC,KAAlB,gBAFxB,E,0EAKaC,GAETA,EAAEC,iBACFC,QAAQC,IAAI,qBAEZ,IAAIC,EAAIC,SAASC,eAAe,cAAcC,MAC1CC,EAAIH,SAASC,eAAe,aAAaC,MAC7CL,QAAQC,IAAI,UAAUC,GACtBF,QAAQC,IAAI,UAAUK,GACtBlC,KAAKH,MAAM2B,aAAaM,EAAEI,GAG1BN,QAAQC,IAAI,gCACZ7B,KAAKH,MAAMsC,QAAQC,KAAK,O,+BAMxB,OADAR,QAAQC,IAAI,qBAER,kBAAC,IAAMtB,SAAP,KACI,yBAAKT,UAAU,kBAEX,wBAAIA,UAAU,oCAAd,4BAEA,0BAAMuC,SAAUrC,KAAKwB,cACrB,yBAAK1B,UAAU,cACf,+CACA,8BACAA,UAAU,eACVC,GAAG,aACHuC,KAAO,QACPC,KAAK,IACLC,YAAY,6BACZC,UAAQ,IAER,2CACA,8BACA3C,UAAU,eACVC,GAAG,YACHuC,KAAM,OACNC,KAAK,IACLC,YAAY,gBACZC,UAAQ,KAGR,4BAAQC,KAAK,SACb5C,UAAU,oCADV,uB,GAtDCM,IAAMC,Y,QCkDZsC,E,YA3Cb,WAAY9C,GACX,IAAD,8BACE,4CAAMA,KACD+C,MAAM,CACTjC,OAAS,CAAC,CAACV,MAAQ,4FACPE,OAAQ,WACR,CAACF,MAAQ,4FACTE,OAAQ,WACR,CAACF,MAAQ,4FACTE,OAAQ,aAItB,EAAKqB,aAAe,EAAKA,aAAaC,KAAlB,gBAZtB,E,0EAeexB,EAAQE,GAEhBF,EAAM4C,OAAS,GAAK1C,EAAO0C,OAAS,GAEvC7C,KAAK8C,SACH,CACEnC,OAAM,sBAAOX,KAAK4C,MAAMjC,QAAlB,CAA2B,CAACV,MAAQA,EAAQE,OAASA,S,+BAOlE,IAAD,OACE,OACE,kBAAC,IAAD,KACA,yBAAKL,UAAU,OAEf,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACpD,GAAD,OAAW,kBAAC,EAAD,iBAAUA,EAAV,CAAiBc,OAAQ,EAAKiC,MAAMjC,aAC7E,kBAAC,IAAD,CAAOqC,KAAK,UAAUC,OAAQ,SAACpD,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmB2B,aAAc,EAAKA,yB,GArCnEpB,IAAMC,WCGJ6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASlB,SAASC,eAAe,SD6H3C,kBAAmBwB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.083d7b0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass Card extends React.Component{\r\nconstructor(props)\r\n{\r\n    super(props);\r\n};\r\n\r\nrender()\r\n{\r\n    \r\n    return(\r\n        \r\n            <div className=\"card text-white bg-success \" id=\"home-card\">\r\n            <div className=\"card-header\">\r\n            Quote\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n            <blockquote className=\"blockquote\">\r\n                    <p>\r\n                    <span className=\"fas fa-quote-left mr-2\"></span>\r\n                    {this.props.quote.quote}\r\n                    <span className=\"fas fa-quote-right ml-2\"></span>\r\n                    </p>\r\n                    \r\n                    <footer \r\n                    className=\"blockquote-footer\">\r\n                        Someone famous in \r\n                        <cite title=\"Source Title\">\r\n                        {this.props.quote.author}\r\n                        </cite>\r\n                    </footer>\r\n            </blockquote>\r\n\r\n            </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nclass Carousel extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    };\r\n\r\n    render()\r\n    {\r\n        function generateColor()\r\n        {\r\n            var hue = 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')';\r\n            document.getElementById(\"home-card\").style.backgroundColor = hue;\r\n            console.log(\"color generate : \",hue);\r\n        }\r\n\r\n        return(\r\n                <React.Fragment>\r\n                    <div id=\"carouselExampleControls\" \r\n                    className=\"carousel slide\" \r\n                    style={{height : \"100%\" }}\r\n                    data-ride=\"carousel\">\r\n                            \r\n                            <div className=\"carousel-inner\"\r\n                            style={{height : \"100%\" }} >\r\n                            \r\n                                {\r\n                                    this.props.quotes.map( (i,index) =>{\r\n                                            if(index === 0)\r\n                                            {\r\n                                                return(\r\n                                                    <div \r\n                                                    className=\"carousel-item active\"\r\n                                                    key={index+1}>\r\n                                                    <Card quote={i} />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            else\r\n                                            {\r\n                                                return(\r\n                                                    <div \r\n                                                    className=\"carousel-item\"\r\n                                                    key={index+1}>\r\n                                                    <Card quote={i}/>\r\n                                                    </div>\r\n                                                );\r\n                                        \r\n                                            }\r\n                                    })\r\n                                        \r\n                        \r\n                                }\r\n                            \r\n                            </div>\r\n\r\n                            <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                                <span className=\"sr-only\">Previous</span>\r\n                            </a>\r\n\r\n                            <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                                <span className=\"sr-only\">Next</span>\r\n                            </a>\r\n\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n    }\r\n};\r\n\r\nexport default Carousel;","import React from 'react'\r\nimport './add_new.css';\r\nimport {Link} from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass AddNew extends React.Component{\r\n    render()\r\n    {\r\n        return(\r\n             <Link to=\"/create\">\r\n            <div className=\"addbtn mb-5 mr-5\">\r\n                <span className=\"fas fa-plus\"></span>\r\n            </div>\r\n            </Link>\r\n        )\r\n    }\r\n};\r\n\r\nexport default AddNew;","import React from 'react';\r\nimport Carousel from './carasole';\r\nimport AddNew from './add_new';\r\nimport './home.css';\r\n//import {Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className='home p-3'>\r\n            <Carousel quotes={ this.props.quotes }/>\r\n            <AddNew/>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './input.css';\r\n//import { Link , Redirect } from 'react-router-dom';\r\n\r\nclass Create extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        console.log(\"form is submitted\");\r\n        //update the state \r\n        let x = document.getElementById(\"quote_cont\").value;\r\n        let y = document.getElementById(\"auth_cont\").value;\r\n        console.log(\"text : \",x);\r\n        console.log(\"auth : \",y);\r\n        this.props.handleSubmit(x,y);\r\n        \r\n        //<Redirect exact to=\"/\" />\r\n        console.log(\"redirecting to the home page\");\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render()\r\n    {\r\n        console.log(\"input form called\");\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"card pl-3 pr-3\">\r\n                    \r\n                    <h4 className=\"card-title text-center mt-3 mb-3\">write whats in your mind</h4>\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                    <label >Quote here :</label>\r\n                    <textarea \r\n                    className=\"form-control\" \r\n                    id=\"quote_cont\"\r\n                    name = \"quote\" \r\n                    rows=\"3\"\r\n                    placeholder=\"write your beautiful quote\"\r\n                    required/>\r\n\r\n                    <label >Author :</label>\r\n                    <textarea \r\n                    className=\"form-control\" \r\n                    id=\"auth_cont\"\r\n                    name= \"auth\" \r\n                    rows=\"3\"\r\n                    placeholder=\"author's name\"\r\n                    required/>\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary btn-sm btn-block\"\r\n                    >Create Quote</button>\r\n        </form>\r\n                  \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }    \r\n};\r\n\r\nexport default Create;","import React from 'react';\nimport './App.css';\n//import AddNew from './components/add_new';\nimport Home from './components/home';\n//import Card from './components/card';\nimport Create from './components/input';\n\nimport {BrowserRouter , Route} from 'react-router-dom';\n\nclass App extends React.Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      quotes : [{quote : \"111 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\",\n                  author: \"unknown\"},\n                  {quote : \"222 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\",\n                  author: \"unknown\"},\n                  {quote : \"333 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\",\n                  author: \"unknown\"}\n                ]\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    handleSubmit(quote , author)\n    {\n      if(quote.length > 0 && author.length > 0)\n      {\n      this.setState(\n        {\n          quotes : [...this.state.quotes , {quote : quote , author : author}]\n        }\n      )\n    };\n  };\n\n  render()\n  {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n      \n      <Route exact path=\"/\" render={(props) => <Home {...props} quotes={this.state.quotes}  /> } />\n      <Route path=\"/create\" render={(props) => <Create {...props} handleSubmit={this.handleSubmit} /> } />\n  \n  </div>\n      </BrowserRouter>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}